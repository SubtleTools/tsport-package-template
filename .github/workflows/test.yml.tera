name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test Suite
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20, 22]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: {% raw %}${{ matrix.node-version }}{% endraw %}
        
    - name: Setup Go (for comparative testing)
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.bun
          node_modules
        key: {% raw %}${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}{% endraw %}
        restore-keys: |
          {% raw %}${{ runner.os }}-bun-{% endraw %}

    - name: Install dependencies
      run: bun install

    - name: Build project
      run: bun run build

    - name: Run tests
      run: bun test

    - name: Run compatibility tests
      run: bun run test:compatibility

  lint:
    name: Lint, Format & Type Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1

    - name: Install dependencies
      run: bun install

    - name: Install dprint
      run: curl -fsSL https://dprint.dev/install.sh | sh

    - name: Add dprint to PATH
      run: echo "$HOME/.dprint/bin" >> $GITHUB_PATH

    - name: Biome lint check
      run: bun run lint

    - name: Format check (dprint with Biome plugin)
      run: dprint check

    - name: Type check
      run: bun tsc --noEmit

    - name: Build check
      run: bun run build